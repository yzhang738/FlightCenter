//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace FlightCenterData
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FlightCenterEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FlightCenterEntities object using the connection string found in the 'FlightCenterEntities' section of the application configuration file.
        /// </summary>
        public FlightCenterEntities() : base("name=FlightCenterEntities", "FlightCenterEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FlightCenterEntities object.
        /// </summary>
        public FlightCenterEntities(string connectionString) : base(connectionString, "FlightCenterEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FlightCenterEntities object.
        /// </summary>
        public FlightCenterEntities(EntityConnection connection) : base(connection, "FlightCenterEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Airline> Airlines
        {
            get
            {
                if ((_Airlines == null))
                {
                    _Airlines = base.CreateObjectSet<Airline>("Airlines");
                }
                return _Airlines;
            }
        }
        private ObjectSet<Airline> _Airlines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CruiseSupplier> CruiseSuppliers
        {
            get
            {
                if ((_CruiseSuppliers == null))
                {
                    _CruiseSuppliers = base.CreateObjectSet<CruiseSupplier>("CruiseSuppliers");
                }
                return _CruiseSuppliers;
            }
        }
        private ObjectSet<CruiseSupplier> _CruiseSuppliers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Destination> Destinations
        {
            get
            {
                if ((_Destinations == null))
                {
                    _Destinations = base.CreateObjectSet<Destination>("Destinations");
                }
                return _Destinations;
            }
        }
        private ObjectSet<Destination> _Destinations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InsuranceSupplier> InsuranceSuppliers
        {
            get
            {
                if ((_InsuranceSuppliers == null))
                {
                    _InsuranceSuppliers = base.CreateObjectSet<InsuranceSupplier>("InsuranceSuppliers");
                }
                return _InsuranceSuppliers;
            }
        }
        private ObjectSet<InsuranceSupplier> _InsuranceSuppliers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LandSupplier> LandSuppliers
        {
            get
            {
                if ((_LandSuppliers == null))
                {
                    _LandSuppliers = base.CreateObjectSet<LandSupplier>("LandSuppliers");
                }
                return _LandSuppliers;
            }
        }
        private ObjectSet<LandSupplier> _LandSuppliers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SaleLocation> SaleLocations
        {
            get
            {
                if ((_SaleLocations == null))
                {
                    _SaleLocations = base.CreateObjectSet<SaleLocation>("SaleLocations");
                }
                return _SaleLocations;
            }
        }
        private ObjectSet<SaleLocation> _SaleLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sale> Sales
        {
            get
            {
                if ((_Sales == null))
                {
                    _Sales = base.CreateObjectSet<Sale>("Sales");
                }
                return _Sales;
            }
        }
        private ObjectSet<Sale> _Sales;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Shop> Shops
        {
            get
            {
                if ((_Shops == null))
                {
                    _Shops = base.CreateObjectSet<Shop>("Shops");
                }
                return _Shops;
            }
        }
        private ObjectSet<Shop> _Shops;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SourceType> SourceTypes
        {
            get
            {
                if ((_SourceTypes == null))
                {
                    _SourceTypes = base.CreateObjectSet<SourceType>("SourceTypes");
                }
                return _SourceTypes;
            }
        }
        private ObjectSet<SourceType> _SourceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesSupplier> SalesSuppliers
        {
            get
            {
                if ((_SalesSuppliers == null))
                {
                    _SalesSuppliers = base.CreateObjectSet<SalesSupplier>("SalesSuppliers");
                }
                return _SalesSuppliers;
            }
        }
        private ObjectSet<SalesSupplier> _SalesSuppliers;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Airlines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAirlines(Airline airline)
        {
            base.AddObject("Airlines", airline);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CruiseSuppliers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCruiseSuppliers(CruiseSupplier cruiseSupplier)
        {
            base.AddObject("CruiseSuppliers", cruiseSupplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Destinations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDestinations(Destination destination)
        {
            base.AddObject("Destinations", destination);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InsuranceSuppliers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInsuranceSuppliers(InsuranceSupplier insuranceSupplier)
        {
            base.AddObject("InsuranceSuppliers", insuranceSupplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LandSuppliers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLandSuppliers(LandSupplier landSupplier)
        {
            base.AddObject("LandSuppliers", landSupplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SaleLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSaleLocations(SaleLocation saleLocation)
        {
            base.AddObject("SaleLocations", saleLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sales EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSales(Sale sale)
        {
            base.AddObject("Sales", sale);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Shops EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToShops(Shop shop)
        {
            base.AddObject("Shops", shop);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SourceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSourceTypes(SourceType sourceType)
        {
            base.AddObject("SourceTypes", sourceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesSuppliers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesSuppliers(SalesSupplier salesSupplier)
        {
            base.AddObject("SalesSuppliers", salesSupplier);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="shop">No Metadata Documentation available.</param>
        /// <param name="createdDateTime">No Metadata Documentation available.</param>
        /// <param name="bookingDate">No Metadata Documentation available.</param>
        /// <param name="passengerName">No Metadata Documentation available.</param>
        /// <param name="destination">No Metadata Documentation available.</param>
        /// <param name="deposit">No Metadata Documentation available.</param>
        /// <param name="saleLocation">No Metadata Documentation available.</param>
        /// <param name="numPassengers">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddSales(global::System.String name, global::System.String userID, global::System.String shop, Nullable<global::System.DateTime> createdDateTime, Nullable<global::System.DateTime> bookingDate, global::System.String passengerName, global::System.String destination, Nullable<global::System.Decimal> deposit, global::System.String saleLocation, Nullable<global::System.Int32> numPassengers, global::System.String comments)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter userIDParameter;
            if (userID != null)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.String));
            }
    
            ObjectParameter shopParameter;
            if (shop != null)
            {
                shopParameter = new ObjectParameter("Shop", shop);
            }
            else
            {
                shopParameter = new ObjectParameter("Shop", typeof(global::System.String));
            }
    
            ObjectParameter createdDateTimeParameter;
            if (createdDateTime.HasValue)
            {
                createdDateTimeParameter = new ObjectParameter("CreatedDateTime", createdDateTime);
            }
            else
            {
                createdDateTimeParameter = new ObjectParameter("CreatedDateTime", typeof(global::System.DateTime));
            }
    
            ObjectParameter bookingDateParameter;
            if (bookingDate.HasValue)
            {
                bookingDateParameter = new ObjectParameter("BookingDate", bookingDate);
            }
            else
            {
                bookingDateParameter = new ObjectParameter("BookingDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter passengerNameParameter;
            if (passengerName != null)
            {
                passengerNameParameter = new ObjectParameter("PassengerName", passengerName);
            }
            else
            {
                passengerNameParameter = new ObjectParameter("PassengerName", typeof(global::System.String));
            }
    
            ObjectParameter destinationParameter;
            if (destination != null)
            {
                destinationParameter = new ObjectParameter("Destination", destination);
            }
            else
            {
                destinationParameter = new ObjectParameter("Destination", typeof(global::System.String));
            }
    
            ObjectParameter depositParameter;
            if (deposit.HasValue)
            {
                depositParameter = new ObjectParameter("Deposit", deposit);
            }
            else
            {
                depositParameter = new ObjectParameter("Deposit", typeof(global::System.Decimal));
            }
    
            ObjectParameter saleLocationParameter;
            if (saleLocation != null)
            {
                saleLocationParameter = new ObjectParameter("SaleLocation", saleLocation);
            }
            else
            {
                saleLocationParameter = new ObjectParameter("SaleLocation", typeof(global::System.String));
            }
    
            ObjectParameter numPassengersParameter;
            if (numPassengers.HasValue)
            {
                numPassengersParameter = new ObjectParameter("NumPassengers", numPassengers);
            }
            else
            {
                numPassengersParameter = new ObjectParameter("NumPassengers", typeof(global::System.Int32));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddSales", nameParameter, userIDParameter, shopParameter, createdDateTimeParameter, bookingDateParameter, passengerNameParameter, destinationParameter, depositParameter, saleLocationParameter, numPassengersParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="salesID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteSales(Nullable<global::System.Int32> salesID)
        {
            ObjectParameter salesIDParameter;
            if (salesID.HasValue)
            {
                salesIDParameter = new ObjectParameter("SalesID", salesID);
            }
            else
            {
                salesIDParameter = new ObjectParameter("SalesID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteSales", salesIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="salesID">No Metadata Documentation available.</param>
        /// <param name="sourceType">No Metadata Documentation available.</param>
        /// <param name="supplier">No Metadata Documentation available.</param>
        /// <param name="saleValue">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspAddSalesSupplier(Nullable<global::System.Int32> salesID, global::System.String sourceType, global::System.String supplier, Nullable<global::System.Decimal> saleValue)
        {
            ObjectParameter salesIDParameter;
            if (salesID.HasValue)
            {
                salesIDParameter = new ObjectParameter("SalesID", salesID);
            }
            else
            {
                salesIDParameter = new ObjectParameter("SalesID", typeof(global::System.Int32));
            }
    
            ObjectParameter sourceTypeParameter;
            if (sourceType != null)
            {
                sourceTypeParameter = new ObjectParameter("SourceType", sourceType);
            }
            else
            {
                sourceTypeParameter = new ObjectParameter("SourceType", typeof(global::System.String));
            }
    
            ObjectParameter supplierParameter;
            if (supplier != null)
            {
                supplierParameter = new ObjectParameter("Supplier", supplier);
            }
            else
            {
                supplierParameter = new ObjectParameter("Supplier", typeof(global::System.String));
            }
    
            ObjectParameter saleValueParameter;
            if (saleValue.HasValue)
            {
                saleValueParameter = new ObjectParameter("SaleValue", saleValue);
            }
            else
            {
                saleValueParameter = new ObjectParameter("SaleValue", typeof(global::System.Decimal));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspAddSalesSupplier", salesIDParameter, sourceTypeParameter, supplierParameter, saleValueParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="salesID">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="shop">No Metadata Documentation available.</param>
        /// <param name="updatedDateTime">No Metadata Documentation available.</param>
        /// <param name="bookingDate">No Metadata Documentation available.</param>
        /// <param name="passengerName">No Metadata Documentation available.</param>
        /// <param name="destination">No Metadata Documentation available.</param>
        /// <param name="deposit">No Metadata Documentation available.</param>
        /// <param name="saleLocation">No Metadata Documentation available.</param>
        /// <param name="numPassengers">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspUpdateSales(Nullable<global::System.Int32> salesID, global::System.String userID, global::System.String shop, Nullable<global::System.DateTime> updatedDateTime, Nullable<global::System.DateTime> bookingDate, global::System.String passengerName, global::System.String destination, Nullable<global::System.Decimal> deposit, global::System.String saleLocation, Nullable<global::System.Int32> numPassengers, global::System.String comments)
        {
            ObjectParameter salesIDParameter;
            if (salesID.HasValue)
            {
                salesIDParameter = new ObjectParameter("SalesID", salesID);
            }
            else
            {
                salesIDParameter = new ObjectParameter("SalesID", typeof(global::System.Int32));
            }
    
            ObjectParameter userIDParameter;
            if (userID != null)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.String));
            }
    
            ObjectParameter shopParameter;
            if (shop != null)
            {
                shopParameter = new ObjectParameter("Shop", shop);
            }
            else
            {
                shopParameter = new ObjectParameter("Shop", typeof(global::System.String));
            }
    
            ObjectParameter updatedDateTimeParameter;
            if (updatedDateTime.HasValue)
            {
                updatedDateTimeParameter = new ObjectParameter("UpdatedDateTime", updatedDateTime);
            }
            else
            {
                updatedDateTimeParameter = new ObjectParameter("UpdatedDateTime", typeof(global::System.DateTime));
            }
    
            ObjectParameter bookingDateParameter;
            if (bookingDate.HasValue)
            {
                bookingDateParameter = new ObjectParameter("BookingDate", bookingDate);
            }
            else
            {
                bookingDateParameter = new ObjectParameter("BookingDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter passengerNameParameter;
            if (passengerName != null)
            {
                passengerNameParameter = new ObjectParameter("PassengerName", passengerName);
            }
            else
            {
                passengerNameParameter = new ObjectParameter("PassengerName", typeof(global::System.String));
            }
    
            ObjectParameter destinationParameter;
            if (destination != null)
            {
                destinationParameter = new ObjectParameter("Destination", destination);
            }
            else
            {
                destinationParameter = new ObjectParameter("Destination", typeof(global::System.String));
            }
    
            ObjectParameter depositParameter;
            if (deposit.HasValue)
            {
                depositParameter = new ObjectParameter("Deposit", deposit);
            }
            else
            {
                depositParameter = new ObjectParameter("Deposit", typeof(global::System.Decimal));
            }
    
            ObjectParameter saleLocationParameter;
            if (saleLocation != null)
            {
                saleLocationParameter = new ObjectParameter("SaleLocation", saleLocation);
            }
            else
            {
                saleLocationParameter = new ObjectParameter("SaleLocation", typeof(global::System.String));
            }
    
            ObjectParameter numPassengersParameter;
            if (numPassengers.HasValue)
            {
                numPassengersParameter = new ObjectParameter("NumPassengers", numPassengers);
            }
            else
            {
                numPassengersParameter = new ObjectParameter("NumPassengers", typeof(global::System.Int32));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspUpdateSales", salesIDParameter, userIDParameter, shopParameter, updatedDateTimeParameter, bookingDateParameter, passengerNameParameter, destinationParameter, depositParameter, saleLocationParameter, numPassengersParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="salesID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteSalesSupplier(Nullable<global::System.Int32> salesID)
        {
            ObjectParameter salesIDParameter;
            if (salesID.HasValue)
            {
                salesIDParameter = new ObjectParameter("SalesID", salesID);
            }
            else
            {
                salesIDParameter = new ObjectParameter("SalesID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteSalesSupplier", salesIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="salesID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> uspDeleteSalesAndSalesSupplier(Nullable<global::System.Int32> salesID)
        {
            ObjectParameter salesIDParameter;
            if (salesID.HasValue)
            {
                salesIDParameter = new ObjectParameter("SalesID", salesID);
            }
            else
            {
                salesIDParameter = new ObjectParameter("SalesID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("uspDeleteSalesAndSalesSupplier", salesIDParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlightCenterModel", Name="Airline")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Airline : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Airline object.
        /// </summary>
        /// <param name="airlineID">Initial value of the AirlineID property.</param>
        public static Airline CreateAirline(global::System.Int32 airlineID)
        {
            Airline airline = new Airline();
            airline.AirlineID = airlineID;
            return airline;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AirlineID
        {
            get
            {
                return _AirlineID;
            }
            set
            {
                if (_AirlineID != value)
                {
                    OnAirlineIDChanging(value);
                    ReportPropertyChanging("AirlineID");
                    _AirlineID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AirlineID");
                    OnAirlineIDChanged();
                }
            }
        }
        private global::System.Int32 _AirlineID;
        partial void OnAirlineIDChanging(global::System.Int32 value);
        partial void OnAirlineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlightCenterModel", Name="CruiseSupplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CruiseSupplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CruiseSupplier object.
        /// </summary>
        /// <param name="cruiseSupplierID">Initial value of the CruiseSupplierID property.</param>
        public static CruiseSupplier CreateCruiseSupplier(global::System.Int32 cruiseSupplierID)
        {
            CruiseSupplier cruiseSupplier = new CruiseSupplier();
            cruiseSupplier.CruiseSupplierID = cruiseSupplierID;
            return cruiseSupplier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CruiseSupplierID
        {
            get
            {
                return _CruiseSupplierID;
            }
            set
            {
                if (_CruiseSupplierID != value)
                {
                    OnCruiseSupplierIDChanging(value);
                    ReportPropertyChanging("CruiseSupplierID");
                    _CruiseSupplierID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CruiseSupplierID");
                    OnCruiseSupplierIDChanged();
                }
            }
        }
        private global::System.Int32 _CruiseSupplierID;
        partial void OnCruiseSupplierIDChanging(global::System.Int32 value);
        partial void OnCruiseSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlightCenterModel", Name="Destination")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Destination : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Destination object.
        /// </summary>
        /// <param name="destinationID">Initial value of the DestinationID property.</param>
        public static Destination CreateDestination(global::System.Int32 destinationID)
        {
            Destination destination = new Destination();
            destination.DestinationID = destinationID;
            return destination;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DestinationID
        {
            get
            {
                return _DestinationID;
            }
            set
            {
                if (_DestinationID != value)
                {
                    OnDestinationIDChanging(value);
                    ReportPropertyChanging("DestinationID");
                    _DestinationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DestinationID");
                    OnDestinationIDChanged();
                }
            }
        }
        private global::System.Int32 _DestinationID;
        partial void OnDestinationIDChanging(global::System.Int32 value);
        partial void OnDestinationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlightCenterModel", Name="InsuranceSupplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InsuranceSupplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InsuranceSupplier object.
        /// </summary>
        /// <param name="insuranceSupplierID">Initial value of the InsuranceSupplierID property.</param>
        public static InsuranceSupplier CreateInsuranceSupplier(global::System.Int32 insuranceSupplierID)
        {
            InsuranceSupplier insuranceSupplier = new InsuranceSupplier();
            insuranceSupplier.InsuranceSupplierID = insuranceSupplierID;
            return insuranceSupplier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InsuranceSupplierID
        {
            get
            {
                return _InsuranceSupplierID;
            }
            set
            {
                if (_InsuranceSupplierID != value)
                {
                    OnInsuranceSupplierIDChanging(value);
                    ReportPropertyChanging("InsuranceSupplierID");
                    _InsuranceSupplierID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InsuranceSupplierID");
                    OnInsuranceSupplierIDChanged();
                }
            }
        }
        private global::System.Int32 _InsuranceSupplierID;
        partial void OnInsuranceSupplierIDChanging(global::System.Int32 value);
        partial void OnInsuranceSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlightCenterModel", Name="LandSupplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LandSupplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LandSupplier object.
        /// </summary>
        /// <param name="landSupplierID">Initial value of the LandSupplierID property.</param>
        public static LandSupplier CreateLandSupplier(global::System.Int32 landSupplierID)
        {
            LandSupplier landSupplier = new LandSupplier();
            landSupplier.LandSupplierID = landSupplierID;
            return landSupplier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LandSupplierID
        {
            get
            {
                return _LandSupplierID;
            }
            set
            {
                if (_LandSupplierID != value)
                {
                    OnLandSupplierIDChanging(value);
                    ReportPropertyChanging("LandSupplierID");
                    _LandSupplierID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LandSupplierID");
                    OnLandSupplierIDChanged();
                }
            }
        }
        private global::System.Int32 _LandSupplierID;
        partial void OnLandSupplierIDChanging(global::System.Int32 value);
        partial void OnLandSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlightCenterModel", Name="Sale")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sale : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sale object.
        /// </summary>
        /// <param name="salesID">Initial value of the SalesID property.</param>
        public static Sale CreateSale(global::System.Int64 salesID)
        {
            Sale sale = new Sale();
            sale.SalesID = salesID;
            return sale;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SalesID
        {
            get
            {
                return _SalesID;
            }
            set
            {
                if (_SalesID != value)
                {
                    OnSalesIDChanging(value);
                    ReportPropertyChanging("SalesID");
                    _SalesID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SalesID");
                    OnSalesIDChanged();
                }
            }
        }
        private global::System.Int64 _SalesID;
        partial void OnSalesIDChanging(global::System.Int64 value);
        partial void OnSalesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Shop
        {
            get
            {
                return _Shop;
            }
            set
            {
                OnShopChanging(value);
                ReportPropertyChanging("Shop");
                _Shop = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Shop");
                OnShopChanged();
            }
        }
        private global::System.String _Shop;
        partial void OnShopChanging(global::System.String value);
        partial void OnShopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDateTime
        {
            get
            {
                return _CreatedDateTime;
            }
            set
            {
                OnCreatedDateTimeChanging(value);
                ReportPropertyChanging("CreatedDateTime");
                _CreatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDateTime");
                OnCreatedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDateTime;
        partial void OnCreatedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BookingDate
        {
            get
            {
                return _BookingDate;
            }
            set
            {
                OnBookingDateChanging(value);
                ReportPropertyChanging("BookingDate");
                _BookingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookingDate");
                OnBookingDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BookingDate;
        partial void OnBookingDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBookingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PassengerName
        {
            get
            {
                return _PassengerName;
            }
            set
            {
                OnPassengerNameChanging(value);
                ReportPropertyChanging("PassengerName");
                _PassengerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PassengerName");
                OnPassengerNameChanged();
            }
        }
        private global::System.String _PassengerName;
        partial void OnPassengerNameChanging(global::System.String value);
        partial void OnPassengerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Destination
        {
            get
            {
                return _Destination;
            }
            set
            {
                OnDestinationChanging(value);
                ReportPropertyChanging("Destination");
                _Destination = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Destination");
                OnDestinationChanged();
            }
        }
        private global::System.String _Destination;
        partial void OnDestinationChanging(global::System.String value);
        partial void OnDestinationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Deposit
        {
            get
            {
                return _Deposit;
            }
            set
            {
                OnDepositChanging(value);
                ReportPropertyChanging("Deposit");
                _Deposit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deposit");
                OnDepositChanged();
            }
        }
        private Nullable<global::System.Decimal> _Deposit;
        partial void OnDepositChanging(Nullable<global::System.Decimal> value);
        partial void OnDepositChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SaleLocation
        {
            get
            {
                return _SaleLocation;
            }
            set
            {
                OnSaleLocationChanging(value);
                ReportPropertyChanging("SaleLocation");
                _SaleLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SaleLocation");
                OnSaleLocationChanged();
            }
        }
        private global::System.String _SaleLocation;
        partial void OnSaleLocationChanging(global::System.String value);
        partial void OnSaleLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Passengers
        {
            get
            {
                return _Passengers;
            }
            set
            {
                OnPassengersChanging(value);
                ReportPropertyChanging("Passengers");
                _Passengers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Passengers");
                OnPassengersChanged();
            }
        }
        private Nullable<global::System.Int32> _Passengers;
        partial void OnPassengersChanging(Nullable<global::System.Int32> value);
        partial void OnPassengersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDateTime
        {
            get
            {
                return _LastUpdatedDateTime;
            }
            set
            {
                OnLastUpdatedDateTimeChanging(value);
                ReportPropertyChanging("LastUpdatedDateTime");
                _LastUpdatedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDateTime");
                OnLastUpdatedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDateTime;
        partial void OnLastUpdatedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateTimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlightCenterModel", Name="SaleLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SaleLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SaleLocation object.
        /// </summary>
        /// <param name="saleLocationID">Initial value of the SaleLocationID property.</param>
        public static SaleLocation CreateSaleLocation(global::System.Int32 saleLocationID)
        {
            SaleLocation saleLocation = new SaleLocation();
            saleLocation.SaleLocationID = saleLocationID;
            return saleLocation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SaleLocationID
        {
            get
            {
                return _SaleLocationID;
            }
            set
            {
                if (_SaleLocationID != value)
                {
                    OnSaleLocationIDChanging(value);
                    ReportPropertyChanging("SaleLocationID");
                    _SaleLocationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SaleLocationID");
                    OnSaleLocationIDChanged();
                }
            }
        }
        private global::System.Int32 _SaleLocationID;
        partial void OnSaleLocationIDChanging(global::System.Int32 value);
        partial void OnSaleLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlightCenterModel", Name="SalesSupplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesSupplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesSupplier object.
        /// </summary>
        /// <param name="salesSupplierID">Initial value of the SalesSupplierID property.</param>
        /// <param name="salesID">Initial value of the SalesID property.</param>
        public static SalesSupplier CreateSalesSupplier(global::System.Int64 salesSupplierID, global::System.Int64 salesID)
        {
            SalesSupplier salesSupplier = new SalesSupplier();
            salesSupplier.SalesSupplierID = salesSupplierID;
            salesSupplier.SalesID = salesID;
            return salesSupplier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SalesSupplierID
        {
            get
            {
                return _SalesSupplierID;
            }
            set
            {
                if (_SalesSupplierID != value)
                {
                    OnSalesSupplierIDChanging(value);
                    ReportPropertyChanging("SalesSupplierID");
                    _SalesSupplierID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SalesSupplierID");
                    OnSalesSupplierIDChanged();
                }
            }
        }
        private global::System.Int64 _SalesSupplierID;
        partial void OnSalesSupplierIDChanging(global::System.Int64 value);
        partial void OnSalesSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SalesID
        {
            get
            {
                return _SalesID;
            }
            set
            {
                if (_SalesID != value)
                {
                    OnSalesIDChanging(value);
                    ReportPropertyChanging("SalesID");
                    _SalesID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SalesID");
                    OnSalesIDChanged();
                }
            }
        }
        private global::System.Int64 _SalesID;
        partial void OnSalesIDChanging(global::System.Int64 value);
        partial void OnSalesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceType
        {
            get
            {
                return _SourceType;
            }
            set
            {
                OnSourceTypeChanging(value);
                ReportPropertyChanging("SourceType");
                _SourceType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceType");
                OnSourceTypeChanged();
            }
        }
        private global::System.String _SourceType;
        partial void OnSourceTypeChanging(global::System.String value);
        partial void OnSourceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Supplier
        {
            get
            {
                return _Supplier;
            }
            set
            {
                OnSupplierChanging(value);
                ReportPropertyChanging("Supplier");
                _Supplier = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Supplier");
                OnSupplierChanged();
            }
        }
        private global::System.String _Supplier;
        partial void OnSupplierChanging(global::System.String value);
        partial void OnSupplierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SaleValue
        {
            get
            {
                return _SaleValue;
            }
            set
            {
                OnSaleValueChanging(value);
                ReportPropertyChanging("SaleValue");
                _SaleValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SaleValue");
                OnSaleValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _SaleValue;
        partial void OnSaleValueChanging(Nullable<global::System.Decimal> value);
        partial void OnSaleValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlightCenterModel", Name="Shop")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Shop : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Shop object.
        /// </summary>
        /// <param name="shopID">Initial value of the ShopID property.</param>
        public static Shop CreateShop(global::System.Int32 shopID)
        {
            Shop shop = new Shop();
            shop.ShopID = shopID;
            return shop;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShopID
        {
            get
            {
                return _ShopID;
            }
            set
            {
                if (_ShopID != value)
                {
                    OnShopIDChanging(value);
                    ReportPropertyChanging("ShopID");
                    _ShopID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ShopID");
                    OnShopIDChanged();
                }
            }
        }
        private global::System.Int32 _ShopID;
        partial void OnShopIDChanging(global::System.Int32 value);
        partial void OnShopIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlightCenterModel", Name="SourceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SourceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SourceType object.
        /// </summary>
        /// <param name="sourceTypeID">Initial value of the SourceTypeID property.</param>
        public static SourceType CreateSourceType(global::System.Int32 sourceTypeID)
        {
            SourceType sourceType = new SourceType();
            sourceType.SourceTypeID = sourceTypeID;
            return sourceType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceTypeID
        {
            get
            {
                return _SourceTypeID;
            }
            set
            {
                if (_SourceTypeID != value)
                {
                    OnSourceTypeIDChanging(value);
                    ReportPropertyChanging("SourceTypeID");
                    _SourceTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SourceTypeID");
                    OnSourceTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _SourceTypeID;
        partial void OnSourceTypeIDChanging(global::System.Int32 value);
        partial void OnSourceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }

    #endregion

    
}
